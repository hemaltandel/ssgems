@model CategoryNavigationModel
@using Nop.Web.Models.Catalog;

@functions{
    public bool BreadCrumbContainsCurrentCategoryId(CategorySimpleModel category)
    {
        if (Model.CurrentCategoryId == 0)
            return false;

        if (category.Id == Model.CurrentCategoryId)
            return true;

        foreach (var subCategory in category.SubCategories)
        {
            if (BreadCrumbContainsCurrentCategoryId(subCategory))
            {
                return true;
            }
        }

        return false;
    }
}
@helper RenderCategoryLine(CategorySimpleModel category, bool isSubCategory = false)
{

    @*<i class="fa fa-caret-right"></i>&nbsp;*@
    <a class="dropdown-tree-a"
       href="@((isSubCategory || category.SubCategories.Count == 0) ? @Url.RouteUrl("Category", new { SeName = category.SeName }) : "javascript:void(0);")">

        @if (category.NumberOfProducts.HasValue)
        {
            if (!isSubCategory)
            {
                <span class="badge pull-right">
                    @if (category.NumberOfProducts <= 9)
                    {
                        @category.NumberOfProducts.Value
                    }
                    else
                    {
                        @category.NumberOfProducts.Value
                    }
                </span>
            }
            @category.Name
        }
    </a>

    if (category.Id == Model.CurrentCategoryId ||
        category.SubCategories.Count(BreadCrumbContainsCurrentCategoryId) > 0)
    {
        if (category.SubCategories.Count > 0)
        {

            <ul class="category-level-2 dropdown-menu-tree">


                @foreach (var subCategory in category.SubCategories)
                {
                    <li class="dropdown-tree @(subCategory.Id == Model.CurrentCategoryId ? "active" : "inactive")"> @RenderCategoryLine(subCategory, true)</li>
                }

            </ul>
        }
    }

}
@if (Model.Categories.Count > 0)
{
    <div class="panel panel-default side-nav side-nav-category">
        <div class="panel-heading">
            <h4 class="panel-title"> <a data-toggle="collapse" href="#collapseCategory" class="collapseWill"> <span class="pull-left"> <i class="fa fa-caret-right"></i></span> @T("Categories") </a> </h4>
        </div>
        <div id="collapseCategory" class="panel-collapse collapse in">
            <div class="panel-body">
                <ul class="nav nav-pills nav-stacked tree">
                    @foreach (var category in Model.Categories)
                    {
                        <li class="dropdown-tree @(BreadCrumbContainsCurrentCategoryId(category)?"open-tree active":"")">



                            @RenderCategoryLine(category)

                        </li>
                    }
                </ul>


            </div>
        </div>
    </div>
}