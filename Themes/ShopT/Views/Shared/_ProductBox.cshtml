@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Extensions
@using Nop.Web.Models.Catalog;

@helper Text_Truncate(string input, int length)
{
    if (input.Length <= length)
    {
        @Html.Raw(@input)
    }
    else
    {
        @Html.Raw(@input.Substring(0, length))<text>...</text>
    }


}


@helper Price_Modifier(string input, int length)
{
    if (input.Length <= length)
    {
        @Html.Raw(@input)
    }
    else
    {
        @Html.Raw(@input.Substring(0, length))<text>...</text>
    }


}

@{
    //prepare "Add to cart" AJAX link
    string addtocartlink = "";
    string addToWishlist = "";
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, });
    }
    addToWishlist= Url.RouteUrl("AddProductToCart-Details", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist });
    
}

<div class="product" data-productid="@Model.Id">
@if (!Model.ProductPrice.DisableWishlistButton)
{
    <a class="add-fav tooltipHere" data-toggle="tooltip" data-original-title="Add to Wishlist" data-placement="left" onclick="AjaxCart.addproducttocart_catalog('@addToWishlist');return false;">
        <i class="glyphicon glyphicon-heart"></i>
    </a>
}
    <div class="image">
        <div class="quickview">
            <a title="Quick View" class="btn btn-xs  btn-quickview" href="javascript:void(0)" onclick="displayBootstrapModal('@Model.Id')" data-toggle="modal"> Quick View </a>
        </div><a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" title="@Model.DefaultPictureModel.Title"><img alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title" class="img-responsive" /> </a>
        @*<div class="promotion"> <span class="new-product"> NEW</span> <span class="discount">15% OFF</span> </div>*@
    </div>
    <div class="description">
        <h4>
            <a href="@Url.RouteUrl("Product", new
                                                    {
                                                        SeName = Model.SeName
                                                    })">@Text_Truncate(Model.Name, 30)</a>
                                                </h4>
                                                @if (!String.IsNullOrEmpty(Model.ShortDescription))
                                                {
                                                    <p> @Text_Truncate(Model.ShortDescription, 90)</p>
                                                }
                                                @*<span class="size">XL / XXL / S </span>*@
                                            </div>
                                            @if (Model.ReviewOverviewModel.AllowCustomerReviews)
                                            {
                                                int ratingPercent = 0;
                                                if (Model.ReviewOverviewModel.TotalReviews != 0)
                                                {
                                                    ratingPercent = ((Model.ReviewOverviewModel.RatingSum * 100) / Model.ReviewOverviewModel.TotalReviews) / 5;
                                                }
                                                <div class="product-rating-box" title="@string.Format(T("Reviews.TotalReviews").Text, Model.ReviewOverviewModel.TotalReviews)">
                                                    <div class="rating">
                                                        <div style="width: @(ratingPercent)%">
                                                        </div>
                                                    </div>
                                                </div>
                                            }

                                            <div class="price">
                                                <span>@Model.ProductPrice.Price</span>
                                                @if (Model.ProductPrice.DisplayTaxShippingInfo)
                                                {
                                                    var inclTax = EngineContext.Current.Resolve<IWorkContext>().TaxDisplayType == TaxDisplayType.IncludingTax;
                                                    //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                                                    //of course, you can modify appropriate locales to include VAT info there
                                                    <span class="tax-shipping-info">
                                                        @T(inclTax ? "Products.Price.TaxShipping.InclTax" : "Products.Price.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                                                    </span>
                                                }
                                            </div>
                                            <div class="action-control">
                                                @if (!Model.ProductPrice.DisableBuyButton)
                                                {
                                                    <a class="btn btn-primary" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink');return false;">
                                                        <span class="add2cart">
                                                            <i class="glyphicon glyphicon-shopping-cart"> </i> @(Model.ProductPrice.AvailableForPreOrder ? T("ShoppingCart.PreOrder") : T("ShoppingCart.AddToCart"))
                                                        </span>
                                                    </a>
                                                }
                                            </div>
                                            @Html.Widget("productbox_add_info")
                                        </div>
