@model CurrencySelectorModel
@using Nop.Web.Models.Common;
@using Nop.Core;
@using Nop.Core.Infrastructure;
@using Nop.Core.Infrastructure.DependencyManagement;
@if (Model.AvailableCurrencies.Count > 1)
{
    var webHelper = EngineContext.Current.Resolve<IWebHelper>();
    
    //var currencies = Model.AvailableCurrencies.Select(x => new SelectListItem
    //    {
    //        Text = x.Name,
    //        Value = webHelper.ModifyQueryString(Url.RouteUrl("ChangeCurrency", new { customercurrency = x.Id }), "returnurl=" + HttpUtility.UrlEncode(HttpContext.Current.Request.RawUrl), null),
    //        Selected = x.Id.Equals(Model.CurrentCurrencyId)
    //    });
    
    @*@Html.DropDownList("customerCurrency", currencies, new { onchange = "setLocation(this.value);" })*@

    <div class="btn-group currency-menu">
        @foreach (var curr in Model.AvailableCurrencies)
        {
            if (curr.Id == Model.CurrentCurrencyId)
            {
                <a data-toggle="dropdown" data-hover="dropdown" class="btn btn-link dropdown-toggle" href="#@curr.Name">
                    <span>@curr.CurrencySymbol&nbsp;</span>
                    @*<span class="hidden-xs">@curr.Name</span>*@
                    <span class="caret"></span>
                </a>

            }

        }
        <ul class="dropdown-menu dropdown-menu-mini dropdown-menu-primary">
            @foreach (var curr in Model.AvailableCurrencies)
            {
                <li>
                    <a href="@webHelper.ModifyQueryString(Url.RouteUrl("ChangeCurrency", new { customercurrency = curr.Id }), "returnurl=" + HttpUtility.UrlEncode(HttpContext.Current.Request.RawUrl), null)">
                        <span>@curr.CurrencySymbol&nbsp;</span>@curr.Name
                    </a>
                </li>
            }


        </ul>
    </div>
    
}