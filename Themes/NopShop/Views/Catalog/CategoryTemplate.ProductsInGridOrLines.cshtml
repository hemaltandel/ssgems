@model CategoryModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(categoryUrl);
    }

    var breadcrumbDelimiter = EngineContext.Current.Resolve<CommonSettings>().BreadcrumbDelimiter;

    /* Pager Style Override */
    var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber");
    var pagerHtmlString = "";
    if (pager != null) {
        pagerHtmlString = pager.ToHtmlString()
            .Replace("<ul>", "<ul class=\"pagination\">")
            .Replace("<span>", "<a href=\"#\">").Replace("</span>", "</a>")
            .Replace("current-page","active");
            pagerHtmlString = pagerHtmlString.Replace("<ul>", "<ul class=\"pagination\">");
            pagerHtmlString = pagerHtmlString.Replace("<span>", "<a href=\"#\">");
        
            pagerHtmlString = pagerHtmlString.Replace("</span>", "</a>");
        
    }

    MvcHtmlString  pagerHtml = MvcHtmlString.Create(pagerHtmlString);
    
}
@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@using Nop.Web.Extensions;

@helper Text_Truncate(string input, int length)
{
    if (input.Length <= length)
    {
        @Html.Raw(@input)
    }
    else
    {
        @Html.Raw(@input.Substring(0, length))<text>...</text>
    }


}


@*category breadcrumb*@
@if (Model.DisplayCategoryBreadcrumb)
{
    @*<div>
            <ol class="breadcrumb">
                <li><a href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a></li>
                @foreach (var cat in Model.CategoryBreadcrumb)
                {
                    var isLastCategory = cat.Id == Model.Id;

                    if (isLastCategory)
                    {
                        <li class="active">@cat.Name</li>
                    }
                    else
                    {
                        <li><a href="@Url.RouteUrl("Category", new { SeName = cat.SeName })" title="@cat.Name">@cat.Name</a></li>
                    }

                }
            </ol>
        </div>*@

    @*@Html.Widget("categorydetails_after_breadcrumb")*@
}
<div class="page category-page">
    <div class="category-header">
                <h4>@Model.Name</h4>
        <div class="row">
            <div class="col-xs-12">
                @Html.Widget("categorydetails_top")
                @*description*@
                @if (!String.IsNullOrWhiteSpace(Model.Description))
                {
                <div class="category-description">
                    @Html.Raw(Model.Description)
                </div>
                }
            </div>
        </div>
    </div>

    @Html.Widget("categorydetails_before_subcategories")
    <div class="sub-category">
        @*subcategories*@
        @if (Model.SubCategories.Count > 0)
        {
            <div class="row">

                @foreach (var item in Model.SubCategories)
                {
                    <div class="col-lg-2 col-md-2 col-sm-3 col-xs-4  text-center">
                        <div class="thumbnail">

                            <div class="picture">
                                <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                    <img class="img-responsive" alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl"
                                         title="@item.PictureModel.Title" />
                                </a>
                            </div>
                            <div class="category-ash-box">
                                <h4 class="product-title">
                                    <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                       @Text_Truncate(item.Name,14)
                                    </a>
                                </h4>
                            </div>
                        </div>
                    </div>

                }
            </div>
        }

    </div>
    <div class="featured-products">
        @Html.Widget("categorydetails_before_featured_products")
        @*featured products*@
        @if (Model.FeaturedProducts.Count > 0)
        {
            @*<div class="product-grid featured-product-grid">
                    <div class="title">
                        <strong>@T("Products.FeaturedProducts")</strong>
                    </div>
                    <div>
                        @foreach (var item in Model.FeaturedProducts)
                        {
                            <div class="item-box">
                                @Html.Partial("_ProductBox", item)
                            </div>
                        }
                    </div>
                </div>*@


            <div class="product-grid home-page-product-grid">
                <div class="title mid-content-title">
                    <strong>@T("Products.FeaturedProducts")</strong>
                    <span class="pull-right">
                        <a class="title-carousel-control" href="#carousel-example-generic-homepage-product" data-slide="prev">
                            <i class="fa fa-angle-left"></i>
                        </a>
                        <a class="title-carousel-control" href="#carousel-example-generic-homepage-product" data-slide="next">
                            <i class="fa fa-angle-right"></i>
                        </a>

                    </span>

                </div>




                <div id="carousel-example-generic-homepage-product" class="carousel slide" data-ride="carousel">
                    <!-- Indicators -->
                    <!-- Wrapper for slides -->
                    <div class="carousel-inner">
                        @{
            var ci = 0;
                        }
                        @foreach (var item in Model.FeaturedProducts)
                        {
                            if (ci == 0)
                            {
                                @:<div class="item active">
                                    @:<div class="row box-products">
                            }
                            else if (ci % 2 == 0)
                            {
                                @:<div class="item">
                                    @:<div class="row box-products">
                            }

                            <div class="col-md-6">
                                <div class="offer offer-default silde-show-offer pull-text-center">
                                    @Html.Partial("_ProductBox", item)
                                </div>
                            </div>


                            if (ci % 2 == 1)
                            {
                                @:</div>
                                @:</div>
                            }
                            ci++;
                        }
                        @if (ci % 2 == 1)
                        {
                            @:</div>
                            @:</div>
                        }

                    </div>


                </div>
            </div>


        }
        @Html.Widget("categorydetails_after_featured_products")
    </div>

    @* Product Filter*@
    <div class="product-toolbar">
        <div class="row">



            <div class="product-selectors">
                <div class="col-xs-8">
                    <ul class="list-inline">


                        @*sorting*@
                        @if (Model.PagingFilteringContext.AllowProductSorting && Model.Products.Count > 0)
                        {
                            <li>
                                <div class="box-dropdown dropdown product-orderby">

                                    <button class="btn" data-toggle="dropdown" data-hover="dropdown">
                                        <span class="title hidden-xs">@T("Categories.OrderBy")</span>
                                        <span class="selected-value">
                                            @foreach (var products_orderby in Model.PagingFilteringContext.AvailableSortOptions)
                                            {
                                                if (products_orderby.Selected == true)
                                                {
                                                    @products_orderby.Text
                                                }
                                            }
                                        </span>

                                        <span class="h-separator"></span>
                                        <span class="caret"></span>
                                    </button>

                                    <ul class="dropdown-menu">

                                        @foreach (var products_orderby_all in Model.PagingFilteringContext.AvailableSortOptions)
                                        {
                                            <li><a href="@products_orderby_all.Value">@products_orderby_all.Text</a></li>

                                        }

                                    </ul>
                                </div>
                            </li>
                            
                            
                        }


                        @*view mode*@
                        @if (Model.PagingFilteringContext.AllowProductViewModeChanging && Model.Products.Count > 0)
                        {
                            <li>


                                <div class="box-dropdown dropdown product-viewmode">
                                    <button class="btn" data-toggle="dropdown" data-hover="dropdown">
                                        <span class="title hidden-xs">@T("Categories.ViewMode")</span>
                                        <span class="selected-value">
                                            @foreach (var product_viewmode in Model.PagingFilteringContext.AvailableViewModes)
                                            {
                                                if (product_viewmode.Selected == true)
                                                {
                                                    @product_viewmode.Text
                                                }
                                            }
                                        </span>

                                        <span class="h-separator"></span>
                                        <span class="caret"></span>
                                    </button>

                                    <ul class="dropdown-menu">

                                        @foreach (var product_viewmode_all in Model.PagingFilteringContext.AvailableViewModes)
                                        {
                                            <li><a href="@product_viewmode_all.Value">@product_viewmode_all.Text</a></li>

                                        }

                                    </ul>
                                </div>

                            </li>


                        }
                        



                    </ul>
                </div>
                <div class="col-xs-4">

                    @*page size*@
                    @if (Model.PagingFilteringContext.AllowCustomersToSelectPageSize && Model.Products.Count > 0)
                    {


                        <div class="box-dropdown dropdown product-pagesize pull-right">
                            <button class="btn" data-toggle="dropdown" data-hover="dropdown">
                                <span class="title hidden-xs">@T("Categories.PageSize")</span>
                                <span class="selected-value">
                                    @foreach (var product_pagesize in Model.PagingFilteringContext.PageSizeOptions)
                                    {
                                        if (product_pagesize.Selected == true)
                                        {
                                            @product_pagesize.Text
                                        }
                                    }
                                </span>

                                <span class="h-separator"></span>
                                <span class="caret"></span>
                                <span class="title">@T("Categories.PageSize.PerPage")</span>
                            </button>

                            <ul class="dropdown-menu">

                                @foreach (var product_pagesize_all in Model.PagingFilteringContext.PageSizeOptions)
                                {
                                    <li><a href="@product_pagesize_all.Value">@product_pagesize_all.Text</a></li>

                                }

                            </ul>
                        </div>



                        @*<span</span>

                            <div class="col-md-3 remove_left_padding remove_right_padding">
                                @Html.DropDownList("products-pagesize", Model.PagingFilteringContext.PageSizeOptions, new { @class = "form-control dropdown-filter", onchange = "setLocation(this.value);" })
                            </div>
                            <div class="col-md-4 remove_left_padding">
                                <span>@T("Categories.PageSize.PerPage")</span>
                            </div>*@

                    }

                </div>






            </div>





        </div>

    </div>

    
    @Html.Widget("categorydetails_before_product_list")
    @*product list*@
    @if (Model.Products.Count > 0)
    {
        <div class="pager11">
        @pagerHtml
        @*@Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber")*@
    </div>
        
        if (Model.PagingFilteringContext.ViewMode == "list")
        {
            @*list mode*@
            <div class="product-list">

                @foreach (var product in Model.Products)
                {
                    <div class="row">


                        <div class="col-md-12">
                            <div class="offer offer-default">
                                @Html.Partial("_ProductBox", product)
                            </div>
                        </div>
                    </div>


                }
            </div>
        }
        else
        {
            @*grid mode*@
            <div class="product-grid home-page-product-grid">
                @{
            var pg_i = 0;
                }
                @foreach (var product in Model.Products)
                {
                    if (pg_i % 3 == 0)
                    {
                        @:<div class="row">
                        }

                        <div class="col-sm-4 col-lg-4 col-md-4 col-xs-12">
                            <div class="offer offer-default silde-show-offer pull-text-center">
                                @Html.Partial("_ProductBox", product)
                            </div>
                        </div>
                    if (pg_i % 3 == 2)
                    {
                        @:</div>
                    }

                    pg_i++;
                }
                @if (pg_i % 3 != 0)
                {
                    @:</div>
                }

            </div>
        }
    }
    @Html.Widget("categorydetails_bottom")











    








                
               
                @section left
        {
        @Html.Widget("categorydetails_before_filters")
                    <div class="product-filters-wrapper">
                        @*filtering*@
                        @if (Model.PagingFilteringContext.PriceRangeFilter.Enabled)
                        {
                            @Html.Partial("_FilterPriceBox", Model.PagingFilteringContext.PriceRangeFilter, new ViewDataDictionary())
                        }
                        @*filtering*@
                        @if (Model.PagingFilteringContext.SpecificationFilter.Enabled)
                        {
                            @Html.Partial("_FilterSpecsBox", Model.PagingFilteringContext.SpecificationFilter, new ViewDataDictionary())
                        }
                    </div>
                }

               
           